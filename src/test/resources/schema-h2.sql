    CREATE TABLE users (
        id SERIAL primary KEY,
        username VARCHAR(100) NOT NULL,
        password VARCHAR(100),
        NAME VARCHAR(255),
        EMAIL VARCHAR(255),
        TOKEN VARCHAR(255),
        TOKEN_CREATE_TS TIMESTAMP DEFAULT NOW(),
        TOKEN_ACCESS_TS TIMESTAMP DEFAULT NOW()
    );

    CREATE UNIQUE INDEX IDX_USERS_USERNAME ON USERS (USERNAME);
    create or replace sequence users_id_seq start with 1;

    CREATE TABLE USER_ROLES (
        ID SERIAL primary KEY,
        USER_ID INTEGER REFERENCES USERS(ID),
        ROLE_NAME VARCHAR(100)
    );

    CREATE TABLE TEST_CATEGORY (
        ID SERIAL primary KEY,
        NAME VARCHAR(20),
        DESCRIPTION VARCHAR(255)
    );
    create or replace sequence test_category_id_seq start with 1;

    CREATE TABLE TESTCASE (
        ID SERIAL primary KEY,
        NAME VARCHAR(255),
        DESCRIPTION VARCHAR(255),
        TEST_CATEGORY_ID INTEGER NOT NULL REFERENCES TEST_CATEGORY(ID),
        REST_URL VARCHAR(255) NOT NULL,
        HTTP_METHOD VARCHAR(10) NOT NULL,
        HTTP_DATA VARCHAR(4000),
        CONTENT_TYPE VARCHAR(50) DEFAULT 'application/json' NOT NULL,
        VALIDATE_OUTPUT INTEGER DEFAULT 0 NOT NULL,
        OUTPUT_TEMPLATE VARCHAR(4000),
        ALLOW_BLANK_OUTPUT INTEGER DEFAULT 0 NOT NULL,
        VALIDATE_TYPE VARCHAR(10)
    );
    create or replace sequence test_case_id_seq start with 1;

    CREATE TABLE TESTCASE_INSTANCE (
        ID SERIAL primary KEY,
        NAME VARCHAR(255),
        DESCRIPTION VARCHAR(255),
        TESTCASE_ID INTEGER NOT NULL,
        USER_ID INTEGER NOT NULL,
        VALIDATE_OUTPUT INTEGER DEFAULT 0 NOT NULL,
        OUTPUT_TEMPLATE VARCHAR(4000),
        ALLOW_BLANK_OUTPUT INTEGER DEFAULT 0 NOT NULL,
        VALIDATE_TYPE VARCHAR(10),
        CONSTRAINT FK_TESTINSTANCE_TESTCASE FOREIGN KEY (TESTCASE_ID) REFERENCES TESTCASE(ID),
        CONSTRAINT FK_TESTINSTANCE_USERS FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
    );

    CREATE INDEX SYS_IDX_10147 ON TESTCASE_INSTANCE (USER_ID);
    CREATE UNIQUE INDEX SYS_IDX_SYS_PK_10134_10139 ON TESTCASE_INSTANCE (ID);
    create or replace sequence testcase_instance_id_seq start with 1;

    CREATE TABLE HOSTS (
        ID SERIAL primary KEY,
        NAME VARCHAR(255),
        HOSTNAME VARCHAR(255) NOT NULL,
        PORT INTEGER NOT NULL,
        SECUREHTTP INTEGER DEFAULT 0 NOT NULL,
        TEST_CATEGORY_ID INTEGER NOT NULL,
        CONSTRAINT FK_HOSTS_TEST_CATEGORY_ID FOREIGN KEY (TEST_CATEGORY_ID) REFERENCES TEST_CATEGORY(ID)
    );
    CREATE INDEX SYS_IDX_10113 ON HOSTS (TEST_CATEGORY_ID);
    CREATE UNIQUE INDEX SYS_IDX_SYS_PK_10102_10107 ON HOSTS (ID);
    create or replace sequence host_id_seq start with 1;

    CREATE TABLE TESTCASE_RUN (
        ID SERIAL primary KEY,
        TESTCASE_INSTANCE_ID INTEGER NOT NULL,
        HOST_ID INTEGER NOT NULL,
        SUCCESS INTEGER DEFAULT 1 NOT NULL,
        RUN_DATE TIMESTAMP DEFAULT LOCALTIMESTAMP,
        RETURN_CODE INTEGER DEFAULT 0 NOT NULL,
        ERROR VARCHAR(1024),
        "RESULT" VARCHAR(4096),
        CONTENT_TYPE VARCHAR(20),
        CONSTRAINT FK_TESTRUN_HOST FOREIGN KEY (HOST_ID) REFERENCES HOSTS(ID),
        CONSTRAINT FK_TESTRUN_TESTCASEINSTANCE FOREIGN KEY (TESTCASE_INSTANCE_ID) REFERENCES TESTCASE_INSTANCE(ID) ON DELETE CASCADE
    );

    CREATE INDEX SYS_IDX_10171 ON TESTCASE_RUN (TESTCASE_INSTANCE_ID);
    CREATE INDEX SYS_IDX_10173 ON TESTCASE_RUN (HOST_ID);
    create or replace sequence testcase_run_id_seq start with 1;

    CREATE TABLE TESTCASE_VALUES (
        ID SERIAL primary KEY,
        TESTCASE_INSTANCE_ID INTEGER NOT NULL,
        KEY_NAME VARCHAR(255) NOT NULL,
        KEY_VALUE VARCHAR(2048),
        VALUE_TYPE VARCHAR(20),
        CONSTRAINT FK_TESTCASEVALUE_TESTINSTANCE FOREIGN KEY (TESTCASE_INSTANCE_ID) REFERENCES TESTCASE_INSTANCE(ID) ON DELETE CASCADE
    );
    CREATE INDEX SYS_IDX_10157 ON TESTCASE_VALUES (TESTCASE_INSTANCE_ID);
    CREATE UNIQUE INDEX SYS_IDX_SYS_PK_10150_10153 ON TESTCASE_VALUES (ID);
    create or replace sequence testcase_values_id_seq start with 1;

    CREATE TABLE HTTP_HEADERS (
        ID SERIAL primary KEY,
        TEST_CATEGORY_ID INTEGER,
        NAME VARCHAR(255),
        "VALUE" VARCHAR(255),
        TESTCASE_ID INTEGER,
        CONSTRAINT FK_HTTPHEADERS_TESTCATEGORY FOREIGN KEY (TEST_CATEGORY_ID) REFERENCES TEST_CATEGORY(ID)
    );
    CREATE INDEX SYS_IDX_10205 ON HTTP_HEADERS (TEST_CATEGORY_ID);
    create or replace sequence http_headers_id_seq start with 1;

    CREATE TABLE SCHEDULES (
        ID SERIAL primary KEY,
        NAME VARCHAR(100),
        CRON_EXPR VARCHAR(100),
        HOST_ID INTEGER NOT NULL,
        ACTIVE INTEGER DEFAULT 0 NOT NULL,
        TEST_CATEGORY_ID INTEGER NOT NULL,
        CONSTRAINT FK_SCHEDULE_CATEGORY FOREIGN KEY (TEST_CATEGORY_ID) REFERENCES TEST_CATEGORY(ID) ON DELETE CASCADE,
        CONSTRAINT FK_SCHEDULE_HOST FOREIGN KEY (HOST_ID) REFERENCES HOSTS(ID)
    );
    CREATE INDEX SYS_IDX_10185 ON SCHEDULES (HOST_ID);
    CREATE INDEX SYS_IDX_10187 ON SCHEDULES (TEST_CATEGORY_ID);
    create or replace sequence schedules_id_seq start with 1;

    CREATE TABLE SCHEDULED_TESTCASES (
        ID SERIAL primary KEY,
        SCHEDULE_ID INTEGER NOT NULL,
        TESTCASE_INSTANCE_ID INTEGER NOT NULL,
        CONSTRAINT FK_SCHEDULE FOREIGN KEY (SCHEDULE_ID) REFERENCES SCHEDULES(ID) ON DELETE CASCADE,
        CONSTRAINT FK_TESTCASE_INSTANCE FOREIGN KEY (TESTCASE_INSTANCE_ID) REFERENCES TESTCASE_INSTANCE(ID) ON DELETE CASCADE
    );
    CREATE INDEX SYS_IDX_10197 ON SCHEDULED_TESTCASES (SCHEDULE_ID);
    CREATE INDEX SYS_IDX_10199 ON SCHEDULED_TESTCASES (TESTCASE_INSTANCE_ID);
    create or replace sequence scheduled_testcases_id_seq start with 1;
